[
{
  "name":"[Lcom.fasterxml.jackson.databind.deser.Deserializers;"
},
{
  "name":"[Lcom.fasterxml.jackson.databind.deser.KeyDeserializers;"
},
{
  "name":"[Lcom.fasterxml.jackson.databind.deser.ValueInstantiators;"
},
{
  "name":"[Lcom.fasterxml.jackson.databind.ser.Serializers;"
},
{
  "name":"[Lio.agroal.pool.ConnectionHandler;"
},
{
  "name":"api.dto.in.UserCreate",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["java.lang.String","java.lang.String"] }]
},
{
  "name":"ch.qos.logback.classic.AsyncAppender",
  "queryAllPublicMethods":true,
  "methods": [
    {
      "name": "<init>",
      "parameterTypes": []
    },
    {
      "name": "setIncludeCallerData",
      "parameterTypes": [
        "boolean"
      ]
    }
  ]
},
{
  "name":"ch.qos.logback.classic.Logger",
  "methods":[{"name":"log","parameterTypes":["org.slf4j.event.LoggingEvent"] }]
},
{
  "name":"ch.qos.logback.classic.LoggerContext",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.classic.encoder.PatternLayoutEncoder",
  "queryAllPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.classic.pattern.ClassOfCallerConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.classic.pattern.DateConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.classic.pattern.LevelConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.classic.pattern.LineOfCallerConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.classic.pattern.LineSeparatorConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.classic.pattern.LoggerConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.classic.pattern.MDCConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.classic.pattern.MessageConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.classic.pattern.MethodOfCallerConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.classic.pattern.RelativeTimeConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.classic.pattern.ThreadConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.classic.pattern.color.HighlightingCompositeConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
  {
    "name": "ch.qos.logback.core.ConsoleAppender",
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "ch.qos.logback.core.OutputStreamAppender",
    "methods": [
      {
        "name": "setEncoder",
        "parameterTypes": [
          "ch.qos.logback.core.encoder.Encoder"
        ]
      }
    ]
  },
  {
    "name": "ch.qos.logback.core.encoder.Encoder",
    "methods": [
      {
        "name": "valueOf",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "ch.qos.logback.core.encoder.LayoutWrappingEncoder",
    "methods": [
      {
        "name": "setParent",
        "parameterTypes": [
          "ch.qos.logback.core.spi.ContextAware"
        ]
      }
    ]
  },
  {
    "name": "ch.qos.logback.core.pattern.PatternLayoutEncoderBase",
    "methods": [
      {
        "name": "setPattern",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "ch.qos.logback.core.spi.ContextAware",
    "methods": [
      {
        "name": "valueOf",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "com.fasterxml.jackson.databind.ext.Java7SupportImpl",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.ibm.icu.text.Collator"
  },
  {
    "name": "com.ibm.lang.management.OperatingSystemMXBean"
  },
  {
    "name": "com.sun.management.GarbageCollectionNotificationInfo"
  },
  {
    "name": "com.sun.management.GcInfo",
    "fields": [
      {
        "name": "builder"
      },
      {
        "name": "extAttributes"
      }
    ],
    "methods": [
      {
        "name": "getMemoryUsageBeforeGc",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.sun.management.OperatingSystemMXBean",
    "methods": [
      {
        "name": "getCpuLoad",
        "parameterTypes": []
      },
      {
        "name": "getProcessCpuLoad",
        "parameterTypes": []
      }
    ]
},
{
  "name":"com.sun.org.apache.xerces.internal.jaxp.SAXParserFactoryImpl",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"domain.users.User"
},
{
  "name":"infrastructure.logging.LogbackSpanEventAppender",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
  {
    "name": "infrastructure.logging.OpenTelemetryAppender",
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "infrastructure.tables.records.UsersRecord",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.agroal.pool.ConnectionHandler",
    "fields": [
      {
        "name": "state"
      }
    ]
  },
  {
    "name": "io.micrometer.core.instrument.distribution.TimeWindowMax",
    "fields": [
      {
        "name": "rotating"
      }
    ]
  },
  {
    "name": "io.netty.bootstrap.ServerBootstrap$1"
  },
  {
    "name": "io.netty.bootstrap.ServerBootstrap$ServerBootstrapAcceptor",
    "methods": [
      {
        "name": "channelRead",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      },
      {
        "name": "exceptionCaught",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Throwable"
        ]
      }
    ]
  },
  {
    "name": "io.netty.buffer.AbstractByteBufAllocator",
    "queryAllDeclaredMethods": true
  },
{
  "name":"io.netty.buffer.AbstractReferenceCountedByteBuf",
  "fields":[{"name":"refCnt"}]
},
{
  "name":"io.netty.channel.AbstractChannelHandlerContext",
  "fields":[{"name":"handlerState"}]
},
{
  "name":"io.netty.channel.ChannelDuplexHandler",
  "methods": [
    {
      "name": "bind",
      "parameterTypes": [
        "io.netty.channel.ChannelHandlerContext",
        "java.net.SocketAddress",
        "io.netty.channel.ChannelPromise"
      ]
    },
    {
      "name": "close",
      "parameterTypes": [
        "io.netty.channel.ChannelHandlerContext",
        "io.netty.channel.ChannelPromise"
      ]
    },
    {
      "name": "connect",
      "parameterTypes": [
        "io.netty.channel.ChannelHandlerContext",
        "java.net.SocketAddress",
        "java.net.SocketAddress",
        "io.netty.channel.ChannelPromise"
      ]
    },
    {
      "name": "deregister",
      "parameterTypes": [
        "io.netty.channel.ChannelHandlerContext",
        "io.netty.channel.ChannelPromise"
      ]
    },
    {
      "name": "disconnect",
      "parameterTypes": [
        "io.netty.channel.ChannelHandlerContext",
        "io.netty.channel.ChannelPromise"
      ]
    },
    {
      "name": "flush",
      "parameterTypes": [
        "io.netty.channel.ChannelHandlerContext"
      ]
    },
    {
      "name": "read",
      "parameterTypes": [
        "io.netty.channel.ChannelHandlerContext"
      ]
    },
    {
      "name": "write",
      "parameterTypes": [
        "io.netty.channel.ChannelHandlerContext",
        "java.lang.Object",
        "io.netty.channel.ChannelPromise"
      ]
    }
  ]
},
{
  "name":"io.netty.channel.ChannelHandlerAdapter",
  "methods":[{"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }]
},
{
  "name":"io.netty.channel.ChannelInboundHandlerAdapter",
  "methods": [
    {
      "name": "channelActive",
      "parameterTypes": [
        "io.netty.channel.ChannelHandlerContext"
      ]
    },
    {
      "name": "channelInactive",
      "parameterTypes": [
        "io.netty.channel.ChannelHandlerContext"
      ]
    },
    {
      "name": "channelRead",
      "parameterTypes": [
        "io.netty.channel.ChannelHandlerContext",
        "java.lang.Object"
      ]
    },
    {
      "name": "channelReadComplete",
      "parameterTypes": [
        "io.netty.channel.ChannelHandlerContext"
      ]
    },
    {
      "name": "channelRegistered",
      "parameterTypes": [
        "io.netty.channel.ChannelHandlerContext"
      ]
    },
    {
      "name": "channelUnregistered",
      "parameterTypes": [
        "io.netty.channel.ChannelHandlerContext"
      ]
    },
    {
      "name": "channelWritabilityChanged",
      "parameterTypes": [
        "io.netty.channel.ChannelHandlerContext"
      ]
    },
    {
      "name": "exceptionCaught",
      "parameterTypes": [
        "io.netty.channel.ChannelHandlerContext",
        "java.lang.Throwable"
      ]
    },
    {
      "name": "userEventTriggered",
      "parameterTypes": [
        "io.netty.channel.ChannelHandlerContext",
        "java.lang.Object"
      ]
    }
  ]
},
{
  "name":"io.netty.channel.ChannelInitializer",
  "methods": [
    {
      "name": "channelRegistered",
      "parameterTypes": [
        "io.netty.channel.ChannelHandlerContext"
      ]
    },
    {
      "name": "exceptionCaught",
      "parameterTypes": [
        "io.netty.channel.ChannelHandlerContext",
        "java.lang.Throwable"
      ]
    }
  ]
},
{
  "name":"io.netty.channel.ChannelOutboundBuffer",
  "fields": [
    {
      "name": "totalPendingSize"
    },
    {
      "name": "unwritable"
    }
  ]
},
{
  "name":"io.netty.channel.ChannelOutboundHandlerAdapter",
  "methods": [
    {
      "name": "bind",
      "parameterTypes": [
        "io.netty.channel.ChannelHandlerContext",
        "java.net.SocketAddress",
        "io.netty.channel.ChannelPromise"
      ]
    },
    {
      "name": "close",
      "parameterTypes": [
        "io.netty.channel.ChannelHandlerContext",
        "io.netty.channel.ChannelPromise"
      ]
    },
    {
      "name": "connect",
      "parameterTypes": [
        "io.netty.channel.ChannelHandlerContext",
        "java.net.SocketAddress",
        "java.net.SocketAddress",
        "io.netty.channel.ChannelPromise"
      ]
    },
    {
      "name": "deregister",
      "parameterTypes": [
        "io.netty.channel.ChannelHandlerContext",
        "io.netty.channel.ChannelPromise"
      ]
    },
    {
      "name": "disconnect",
      "parameterTypes": [
        "io.netty.channel.ChannelHandlerContext",
        "io.netty.channel.ChannelPromise"
      ]
    },
    {
      "name": "flush",
      "parameterTypes": [
        "io.netty.channel.ChannelHandlerContext"
      ]
    },
    {
      "name": "read",
      "parameterTypes": [
        "io.netty.channel.ChannelHandlerContext"
      ]
    }
  ]
},
{
  "name":"io.netty.channel.DefaultChannelConfig",
  "fields": [
    {
      "name": "autoRead"
    },
    {
      "name": "writeBufferWaterMark"
    }
  ]
},
{
  "name":"io.netty.channel.DefaultChannelPipeline",
  "fields":[{"name":"estimatorHandle"}]
},
{
  "name":"io.netty.channel.DefaultChannelPipeline$HeadContext",
  "methods": [
    {
      "name": "bind",
      "parameterTypes": [
        "io.netty.channel.ChannelHandlerContext",
        "java.net.SocketAddress",
        "io.netty.channel.ChannelPromise"
      ]
    },
    {
      "name": "channelActive",
      "parameterTypes": [
        "io.netty.channel.ChannelHandlerContext"
      ]
    },
    {
      "name": "channelInactive",
      "parameterTypes": [
        "io.netty.channel.ChannelHandlerContext"
      ]
    },
    {
      "name": "channelRead",
      "parameterTypes": [
        "io.netty.channel.ChannelHandlerContext",
        "java.lang.Object"
      ]
    },
    {
      "name": "channelReadComplete",
      "parameterTypes": [
        "io.netty.channel.ChannelHandlerContext"
      ]
    },
    {
      "name": "channelRegistered",
      "parameterTypes": [
        "io.netty.channel.ChannelHandlerContext"
      ]
    },
    {
      "name": "channelUnregistered",
      "parameterTypes": [
        "io.netty.channel.ChannelHandlerContext"
      ]
    },
    {
      "name": "channelWritabilityChanged",
      "parameterTypes": [
        "io.netty.channel.ChannelHandlerContext"
      ]
    },
    {
      "name": "close",
      "parameterTypes": [
        "io.netty.channel.ChannelHandlerContext",
        "io.netty.channel.ChannelPromise"
      ]
    },
    {
      "name": "connect",
      "parameterTypes": [
        "io.netty.channel.ChannelHandlerContext",
        "java.net.SocketAddress",
        "java.net.SocketAddress",
        "io.netty.channel.ChannelPromise"
      ]
    },
    {
      "name": "deregister",
      "parameterTypes": [
        "io.netty.channel.ChannelHandlerContext",
        "io.netty.channel.ChannelPromise"
      ]
    },
    {
      "name": "disconnect",
      "parameterTypes": [
        "io.netty.channel.ChannelHandlerContext",
        "io.netty.channel.ChannelPromise"
      ]
    },
    {
      "name": "exceptionCaught",
      "parameterTypes": [
        "io.netty.channel.ChannelHandlerContext",
        "java.lang.Throwable"
      ]
    },
    {
      "name": "flush",
      "parameterTypes": [
        "io.netty.channel.ChannelHandlerContext"
      ]
    },
    {
      "name": "read",
      "parameterTypes": [
        "io.netty.channel.ChannelHandlerContext"
      ]
    },
    {
      "name": "userEventTriggered",
      "parameterTypes": [
        "io.netty.channel.ChannelHandlerContext",
        "java.lang.Object"
      ]
    },
    {
      "name": "write",
      "parameterTypes": [
        "io.netty.channel.ChannelHandlerContext",
        "java.lang.Object",
        "io.netty.channel.ChannelPromise"
      ]
    }
  ]
},
{
  "name":"io.netty.channel.DefaultChannelPipeline$TailContext",
  "methods": [
    {
      "name": "channelActive",
      "parameterTypes": [
        "io.netty.channel.ChannelHandlerContext"
      ]
    },
    {
      "name": "channelInactive",
      "parameterTypes": [
        "io.netty.channel.ChannelHandlerContext"
      ]
    },
    {
      "name": "channelRead",
      "parameterTypes": [
        "io.netty.channel.ChannelHandlerContext",
        "java.lang.Object"
      ]
    },
    {
      "name": "channelReadComplete",
      "parameterTypes": [
        "io.netty.channel.ChannelHandlerContext"
      ]
    },
    {
      "name": "channelRegistered",
      "parameterTypes": [
        "io.netty.channel.ChannelHandlerContext"
      ]
    },
    {
      "name": "channelUnregistered",
      "parameterTypes": [
        "io.netty.channel.ChannelHandlerContext"
      ]
    },
    {
      "name": "channelWritabilityChanged",
      "parameterTypes": [
        "io.netty.channel.ChannelHandlerContext"
      ]
    },
    {
      "name": "exceptionCaught",
      "parameterTypes": [
        "io.netty.channel.ChannelHandlerContext",
        "java.lang.Throwable"
      ]
    },
    {
      "name": "userEventTriggered",
      "parameterTypes": [
        "io.netty.channel.ChannelHandlerContext",
        "java.lang.Object"
      ]
    }
  ]
},
{
  "name":"io.netty.handler.codec.ByteToMessageDecoder",
  "methods": [
    {
      "name": "channelInactive",
      "parameterTypes": [
        "io.netty.channel.ChannelHandlerContext"
      ]
    },
    {
      "name": "channelRead",
      "parameterTypes": [
        "io.netty.channel.ChannelHandlerContext",
        "java.lang.Object"
      ]
    },
    {
      "name": "channelReadComplete",
      "parameterTypes": [
        "io.netty.channel.ChannelHandlerContext"
      ]
    }
  ]
},
{
  "name":"io.netty.handler.codec.haproxy.HAProxyMessageDecoder"
},
{
  "name":"io.netty.handler.codec.http.HttpObjectDecoder",
  "methods":[{"name":"userEventTriggered","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }]
},
{
  "name":"io.netty.handler.codec.http.HttpObjectEncoder",
  "methods":[{"name":"write","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object","io.netty.channel.ChannelPromise"] }]
},
{
  "name":"io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler",
  "methods": [
    {
      "name": "channelRead",
      "parameterTypes": [
        "io.netty.channel.ChannelHandlerContext",
        "java.lang.Object"
      ]
    },
    {
      "name": "write",
      "parameterTypes": [
        "io.netty.channel.ChannelHandlerContext",
        "java.lang.Object",
        "io.netty.channel.ChannelPromise"
      ]
    }
  ]
},
{
  "name":"io.netty.resolver.dns.Cache$Entries",
  "fields":[{"name":"expirationFuture"}]
},
{
  "name":"io.netty.resolver.dns.macos.MacOSDnsServerAddressStreamProvider"
},
{
  "name":"io.netty.util.DefaultAttributeMap",
  "fields":[{"name":"attributes"}]
},
{
  "name":"io.netty.util.Recycler$DefaultHandle",
  "fields":[{"name":"state"}]
},
{
  "name":"io.netty.util.ReferenceCountUtil",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.netty.util.concurrent.DefaultPromise",
  "fields":[{"name":"result"}]
},
{
  "name":"io.netty.util.concurrent.SingleThreadEventExecutor",
  "fields": [
    {
      "name": "state"
    },
    {
      "name": "threadProperties"
    }
  ]
},
{
  "name":"io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueColdProducerFields",
  "fields":[{"name":"producerLimit"}]
},
{
  "name":"io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueConsumerFields",
  "fields":[{"name":"consumerIndex"}]
},
{
  "name":"io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueProducerFields",
  "fields":[{"name":"producerIndex"}]
},
{
  "name":"io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueConsumerIndexField",
  "fields":[{"name":"consumerIndex"}]
},
{
  "name":"io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueProducerIndexField",
  "fields":[{"name":"producerIndex"}]
},
{
  "name":"io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueProducerLimitField",
  "fields":[{"name":"producerLimit"}]
},
{
  "name":"io.opentelemetry.instrumentation.logback.v1_0.OpenTelemetryAppender",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.reactiverse.contextual.logging.LogbackConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.vertx.core.eventbus.impl.EventBusImpl",
  "fields": [
    {
      "name": "inboundInterceptors"
    },
    {
      "name": "outboundInterceptors"
    }
  ]
},
{
  "name":"io.vertx.core.http.impl.Http1xOrH2CHandler",
  "methods":[{"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }]
},
{
  "name":"io.vertx.core.http.impl.Http1xUpgradeToH2CHandler",
  "methods": [
    {
      "name": "channelRead",
      "parameterTypes": [
        "io.netty.channel.ChannelHandlerContext",
        "java.lang.Object"
      ]
    },
    {
      "name": "userEventTriggered",
      "parameterTypes": [
        "io.netty.channel.ChannelHandlerContext",
        "java.lang.Object"
      ]
    }
  ]
},
{
  "name":"io.vertx.core.http.impl.HttpServerWorker$1",
  "methods": [
    {
      "name": "exceptionCaught",
      "parameterTypes": [
        "io.netty.channel.ChannelHandlerContext",
        "java.lang.Throwable"
      ]
    },
    {
      "name": "userEventTriggered",
      "parameterTypes": [
        "io.netty.channel.ChannelHandlerContext",
        "java.lang.Object"
      ]
    }
  ]
},
{
  "name":"io.vertx.core.http.impl.VertxHttpRequestDecoder"
},
{
  "name":"io.vertx.core.http.impl.VertxHttpResponseEncoder"
},
{
  "name":"io.vertx.core.logging.Log4j2LogDelegateFactory",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.vertx.core.logging.SLF4JLogDelegateFactory",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.vertx.core.net.impl.ServerChannelLoadBalancer"
},
{
  "name":"io.vertx.core.net.impl.VertxHandler",
  "methods": [
    {
      "name": "channelInactive",
      "parameterTypes": [
        "io.netty.channel.ChannelHandlerContext"
      ]
    },
    {
      "name": "channelRead",
      "parameterTypes": [
        "io.netty.channel.ChannelHandlerContext",
        "java.lang.Object"
      ]
    },
    {
      "name": "channelReadComplete",
      "parameterTypes": [
        "io.netty.channel.ChannelHandlerContext"
      ]
    },
    {
      "name": "channelWritabilityChanged",
      "parameterTypes": [
        "io.netty.channel.ChannelHandlerContext"
      ]
    },
    {
      "name": "close",
      "parameterTypes": [
        "io.netty.channel.ChannelHandlerContext",
        "io.netty.channel.ChannelPromise"
      ]
    },
    {
      "name": "exceptionCaught",
      "parameterTypes": [
        "io.netty.channel.ChannelHandlerContext",
        "java.lang.Throwable"
      ]
    },
    {
      "name": "userEventTriggered",
      "parameterTypes": [
        "io.netty.channel.ChannelHandlerContext",
        "java.lang.Object"
      ]
    }
  ]
},
{
  "name":"io.vertx.ext.web.impl.RoutingContextImpl",
  "fields":[{"name":"handlerSeq"}]
},
{
  "name":"io.vertx.ext.web.impl.RoutingContextImplBase",
  "fields": [
    {
      "name": "currentRouteNextFailureHandlerIndex"
    },
    {
      "name": "currentRouteNextHandlerIndex"
    }
  ]
},
{
  "name":"java.io.FilePermission"
},
{
  "name":"java.lang.Boolean",
  "fields":[{"name":"TYPE"}]
},
{
  "name":"java.lang.Byte",
  "fields":[{"name":"TYPE"}]
},
{
  "name":"java.lang.Character",
  "fields":[{"name":"TYPE"}]
},
{
  "name":"java.lang.Double",
  "fields":[{"name":"TYPE"}]
},
{
  "name":"java.lang.Float",
  "fields":[{"name":"TYPE"}]
},
{
  "name":"java.lang.Integer",
  "fields":[{"name":"TYPE"}]
},
{
  "name":"java.lang.Long",
  "fields":[{"name":"TYPE"}]
},
{
  "name":"java.lang.Object"
},
{
  "name":"java.lang.ProcessHandle",
  "methods": [
    {
      "name": "current",
      "parameterTypes": []
    },
    {
      "name": "pid",
      "parameterTypes": []
    }
  ]
},
{
  "name":"java.lang.RuntimePermission"
},
{
  "name":"java.lang.Short",
  "fields":[{"name":"TYPE"}]
},
  {
    "name": "java.lang.String",
    "fields": [
      {
        "name": "TYPE"
      }
    ]
  },
{
  "name":"java.lang.Thread",
  "fields":[{"name":"threadLocalRandomProbe"}]
},
{
  "name":"java.lang.Void",
  "fields":[{"name":"TYPE"}]
},
{
  "name":"java.lang.management.ManagementFactory",
  "methods":[{"name":"getRuntimeMXBean","parameterTypes":[] }]
},
{
  "name":"java.lang.management.MemoryUsage",
  "queryAllPublicMethods":true,
  "methods":[{"name":"from","parameterTypes":["javax.management.openmbean.CompositeData"] }]
},
{
  "name":"java.lang.management.RuntimeMXBean",
  "methods":[{"name":"getInputArguments","parameterTypes":[] }]
},
{
  "name":"java.math.BigDecimal"
},
{
  "name":"java.math.BigInteger"
},
{
  "name":"java.net.NetPermission"
},
{
  "name":"java.net.SocketPermission"
},
{
  "name":"java.net.URLPermission",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.String","java.lang.String"] }]
},
{
  "name":"java.nio.Bits",
  "fields":[{"name":"UNALIGNED"}]
},
{
  "name":"java.nio.Buffer",
  "fields":[{"name":"address"}]
},
{
  "name":"java.nio.ByteBuffer",
  "methods":[{"name":"alignedSlice","parameterTypes":["int"] }]
},
{
  "name":"java.nio.DirectByteBuffer",
  "methods":[{"name":"<init>","parameterTypes":["long","int"] }]
},
{
  "name":"java.nio.channels.spi.SelectorProvider",
  "methods": [
    {
      "name": "openServerSocketChannel",
      "parameterTypes": [
        "java.net.ProtocolFamily"
      ]
    },
    {
      "name": "openSocketChannel",
      "parameterTypes": [
        "java.net.ProtocolFamily"
      ]
    }
  ]
},
  {
    "name": "java.security.AllPermission"
  },
  {
    "name": "java.security.SecureRandomParameters"
  },
  {
    "name": "java.security.SecurityPermission"
  },
  {
    "name": "java.sql.SQLException",
    "fields": [
      {
        "name": "next"
      }
    ]
  },
  {
    "name": "java.util.Date"
  },
  {
    "name": "java.util.PropertyPermission"
  },
  {
    "name": "java.util.concurrent.atomic.AtomicBoolean",
    "fields": [
      {
        "name": "value"
      }
    ]
  },
  {
  "name":"java.util.concurrent.atomic.AtomicReference",
    "fields": [
      {
        "name": "value"
      }
    ]
  },
  {
    "name": "java.util.concurrent.atomic.Striped64",
    "fields": [
      {
        "name": "base"
      },
      {
        "name": "cellsBusy"
      }
    ]
  },
  {
    "name": "javax.management.ObjectName"
  },
  {
    "name": "javax.smartcardio.CardPermission"
  },
  {
    "name": "jdk.internal.misc.Unsafe",
    "methods": [
      {
        "name": "getUnsafe",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "kotlin.Metadata",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "bv",
        "parameterTypes": []
      },
      {
        "name": "d1",
        "parameterTypes": []
      },
      {
        "name": "d2",
        "parameterTypes": []
      },
      {
        "name": "k",
        "parameterTypes": []
      },
      {
        "name": "mv",
        "parameterTypes": []
      },
      {
        "name": "pn",
        "parameterTypes": []
      },
      {
        "name": "xi",
        "parameterTypes": []
      },
      {
        "name": "xs",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "kotlin.jvm.internal.DefaultConstructorMarker"
},
{
  "name":"kotlin.reflect.jvm.internal.ReflectionFactoryImpl",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
  {
    "name": "kotlin.reflect.jvm.internal.impl.resolve.scopes.DescriptorKindFilter",
    "allPublicFields": true
  },
  {
    "name": "org.h2.Driver",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.h2.mvstore.MVStore$TxCounter",
    "fields": [
      {
        "name": "counter"
      }
    ]
  },
  {
    "name": "org.h2.mvstore.Page",
    "fields": [
      {
        "name": "pos"
      }
    ]
  },
  {
    "name": "org.jooq.impl.SQLDataType"
  },
  {
    "name": "org.jooq.util.cubrid.CUBRIDDataType"
  },
  {
    "name": "org.jooq.util.derby.DerbyDataType"
  },
  {
    "name": "org.jooq.util.firebird.FirebirdDataType"
},
{
  "name":"org.jooq.util.h2.H2DataType"
},
{
  "name":"org.jooq.util.hsqldb.HSQLDBDataType"
},
{
  "name":"org.jooq.util.ignite.IgniteDataType"
},
{
  "name":"org.jooq.util.mariadb.MariaDBDataType"
},
{
  "name":"org.jooq.util.mysql.MySQLDataType"
},
{
  "name":"org.jooq.util.postgres.PostgresDataType"
},
{
  "name":"org.jooq.util.sqlite.SQLiteDataType"
},
{
  "name":"org.jooq.util.yugabytedb.YugabyteDBDataType"
},
{
  "name":"org.slf4j.Logger"
},
{
  "name":"org.slf4j.spi.SLF4JServiceProvider"
},
{
  "name":"sun.misc.Unsafe",
  "fields":[{"name":"theUnsafe"}],
  "methods": [
    {
      "name": "copyMemory",
      "parameterTypes": [
        "java.lang.Object",
        "long",
        "java.lang.Object",
        "long",
        "long"
      ]
    },
    {
      "name": "getAndAddLong",
      "parameterTypes": [
        "java.lang.Object",
        "long",
        "long"
      ]
    },
    {
      "name": "getAndSetObject",
      "parameterTypes": [
        "java.lang.Object",
        "long",
        "java.lang.Object"
      ]
    },
    {
      "name": "invokeCleaner",
      "parameterTypes": [
        "java.nio.ByteBuffer"
      ]
    },
    {
      "name": "storeFence",
      "parameterTypes": []
    }
  ]
},
{
  "name":"sun.misc.VM"
},
{
  "name":"sun.nio.ch.SelectorImpl",
  "fields": [
    {
      "name": "publicSelectedKeys"
    },
    {
      "name": "selectedKeys"
    }
  ]
},
{
  "name": "sun.security.provider.NativePRNG",
  "methods": [
    {
      "name": "<init>",
      "parameterTypes": []
    },
    {
      "name": "<init>",
      "parameterTypes": [
        "java.security.SecureRandomParameters"
      ]
    }
  ]
},
  {
    "name": "sun.security.provider.SHA",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.provider.SHA2$SHA256",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "[Lio.agroal.pool.ConnectionHandler;",
    "unsafeAllocated": true
  },
  {
    "condition": {
      "typeReachable": "org.jooq.impl.SQLDataType"
    },
    "name": "[Ljava.lang.Boolean;"
  },
  {
    "condition": {
      "typeReachable": "org.jooq.impl.SQLDataType"
    },
    "name": "[Ljava.lang.Byte;"
  },
  {
    "condition": {
      "typeReachable": "org.jooq.impl.SQLDataType"
    },
    "name": "[Ljava.lang.Double;"
  },
  {
    "condition": {
      "typeReachable": "org.jooq.impl.SQLDataType"
    },
    "name": "[Ljava.lang.Float;"
  },
  {
    "condition": {
      "typeReachable": "org.jooq.impl.SQLDataType"
    },
    "name": "[Ljava.lang.Integer;"
  },
  {
    "condition": {
      "typeReachable": "org.jooq.impl.SQLDataType"
    },
    "name": "[Ljava.lang.Long;"
  },
  {
    "condition": {
      "typeReachable": "org.jooq.impl.SQLDataType"
    },
    "name": "[Ljava.lang.Object;"
  },
  {
    "condition": {
      "typeReachable": "org.jooq.impl.SQLDataType"
    },
    "name": "[Ljava.lang.Short;"
  },
  {
    "condition": {
      "typeReachable": "org.jooq.impl.SQLDataType"
    },
    "name": "[Ljava.lang.String;"
  },
  {
    "condition": {
      "typeReachable": "org.jooq.impl.SQLDataType"
    },
    "name": "[Ljava.math.BigDecimal;"
  },
  {
    "condition": {
      "typeReachable": "org.jooq.impl.SQLDataType"
    },
    "name": "[Ljava.math.BigInteger;"
  },
  {
    "condition": {
      "typeReachable": "org.jooq.impl.SQLDataType"
    },
    "name": "[Ljava.sql.Date;"
  },
  {
    "condition": {
      "typeReachable": "org.jooq.impl.SQLDataType"
    },
    "name": "[Ljava.sql.Time;"
  },
  {
    "condition": {
      "typeReachable": "org.jooq.impl.SQLDataType"
    },
    "name": "[Ljava.sql.Timestamp;"
  },
  {
    "condition": {
      "typeReachable": "org.jooq.impl.SQLDataType"
    },
    "name": "[Ljava.time.Instant;"
  },
  {
    "condition": {
      "typeReachable": "org.jooq.impl.SQLDataType"
    },
    "name": "[Ljava.time.LocalDate;"
  },
  {
    "condition": {
      "typeReachable": "org.jooq.impl.SQLDataType"
    },
    "name": "[Ljava.time.LocalDateTime;"
  },
  {
    "condition": {
      "typeReachable": "org.jooq.impl.SQLDataType"
    },
    "name": "[Ljava.time.LocalTime;"
  },
  {
    "condition": {
      "typeReachable": "org.jooq.impl.SQLDataType"
    },
    "name": "[Ljava.time.OffsetDateTime;"
  },
  {
    "condition": {
      "typeReachable": "org.jooq.impl.SQLDataType"
    },
    "name": "[Ljava.time.OffsetTime;"
  },
  {
    "condition": {
      "typeReachable": "org.jooq.impl.SQLDataType"
    },
    "name": "[Ljava.time.Year;"
  },
  {
    "condition": {
      "typeReachable": "org.jooq.impl.SQLDataType"
    },
    "name": "[Ljava.util.UUID;"
  },
  {
    "condition": {
      "typeReachable": "org.jooq.impl.SQLDataType"
    },
    "name": "[Lorg.jooq.Geography;"
  },
  {
    "condition": {
      "typeReachable": "org.jooq.impl.SQLDataType"
    },
    "name": "[Lorg.jooq.Geometry;"
  },
  {
    "condition": {
      "typeReachable": "org.jooq.impl.SQLDataType"
    },
    "name": "[Lorg.jooq.JSON;"
  },
  {
    "condition": {
      "typeReachable": "org.jooq.impl.SQLDataType"
    },
    "name": "[Lorg.jooq.JSONB;"
  },
  {
    "condition": {
      "typeReachable": "org.jooq.impl.SQLDataType"
    },
    "name": "[Lorg.jooq.Record;"
  },
  {
    "condition": {
      "typeReachable": "org.jooq.impl.SQLDataType"
    },
    "name": "[Lorg.jooq.Result;"
  },
  {
    "condition": {
      "typeReachable": "org.jooq.impl.SQLDataType"
    },
    "name": "[Lorg.jooq.RowId;"
  },
  {
    "condition": {
      "typeReachable": "org.jooq.impl.SQLDataType"
    },
    "name": "[Lorg.jooq.XML;"
  },
  {
    "condition": {
      "typeReachable": "org.jooq.impl.SQLDataType"
    },
    "name": "[Lorg.jooq.types.DayToSecond;"
  },
  {
    "condition": {
      "typeReachable": "org.jooq.impl.SQLDataType"
    },
    "name": "[Lorg.jooq.types.UByte;"
  },
  {
    "condition": {
      "typeReachable": "org.jooq.impl.SQLDataType"
    },
    "name": "[Lorg.jooq.types.UInteger;"
  },
  {
    "condition": {
      "typeReachable": "org.jooq.impl.SQLDataType"
    },
    "name": "[Lorg.jooq.types.ULong;"
  },
  {
    "condition": {
      "typeReachable": "org.jooq.impl.SQLDataType"
    },
    "name": "[Lorg.jooq.types.UShort;"
  },
  {
    "condition": {
      "typeReachable": "org.jooq.impl.SQLDataType"
    },
    "name": "[Lorg.jooq.types.YearToMonth;"
  },
  {
    "condition": {
      "typeReachable": "org.jooq.impl.SQLDataType"
    },
    "name": "[Lorg.jooq.types.YearToSecond;"
  }
]
